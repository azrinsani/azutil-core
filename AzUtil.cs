//using Npgsql;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Threading.Tasks;

namespace AzUtil.Core
{


    public interface IAzUtil
    {
        //Task<DataTable> SqlQueryAsync(string query, string connStr, params object[] Inputs);
        Task SendMail(SMTPSettings sMTP);
    }

   
    public class AzUtil : IAzUtil
    {
        public static int MySQLTimeout = 0;

        //public async Task<DataTable> SqlQueryAsync(string query, string connStr, params object[] Inputs)
        //{
        //    using var sqlConnection = new NpgsqlConnection(connStr);
        //    DataTable DT = new DataTable();
        //    sqlConnection.Open();
        //    using var command = sqlConnection.CreateCommand();
        //    command.CommandTimeout = AzUtil.MySQLTimeout;
        //    command.CommandText = query;
        //    int inputCount = Inputs.Count();
        //    string[] Variables = new string[inputCount];
        //    for (int n = 1; n <= inputCount; n++) Variables[n - 1] = "@P" + n;
        //    if (Inputs != null) for (int n = 0; n < Inputs.Count(); n++) command.Parameters.AddWithValue(Variables[n], Inputs[n]);
        //    using var Results = await command.ExecuteReaderAsync();
        //    for (int i = 0; i < Results.FieldCount; i++) DT.Columns.Add(Results.GetName(i));
        //    DT.Load(Results);
        //    return DT;
        //}

       
        public async Task SendMail(SMTPSettings sMTP)
        {
            SmtpClient client = new SmtpClient(sMTP.Host, sMTP.Port)
            {
                EnableSsl = sMTP.UseSsl,   
                DeliveryMethod = SmtpDeliveryMethod.Network,
                UseDefaultCredentials = false,
                Credentials = new NetworkCredential(sMTP.UN, sMTP.PW) //tHIS PASSWORD WAS generated by google special app access https://myaccount.google.com/apppasswords
            };
            MailMessage mailMessage = new MailMessage
            {
                From = new MailAddress(sMTP.MailFrom)
            };
            foreach (var mailTo in sMTP.MailTos) mailMessage.To.Add(mailTo);
            foreach (var mailTo in sMTP.MailBccs) mailMessage.Bcc.Add(mailTo);
            foreach (var mailTo in sMTP.MailCcs) mailMessage.CC.Add(mailTo);
            mailMessage.IsBodyHtml = true;
            mailMessage.Subject = sMTP.MailSubject;
            mailMessage.Body = sMTP.MailBody;
            await client.SendMailAsync(mailMessage);
        }
    }


    public class SMTPSettings
    {
        public string Host = "127.0.0.1";
        public int Port = 587;
        public bool UseSsl = true;
        public string UN = "";
        public string PW = "";
        public string MailFrom;
        public List<string> MailTos = new List<string>();
        public List<string> MailBccs = new List<string>();
        public List<string> MailCcs = new List<string>();
        public string MailBody;
        public string MailSubject;
    }
}
